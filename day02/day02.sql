
SELECT
    * -- * : 모든 것을 의미하고, SELECT 절에 기술하게 되면 모든 column을 꺼내온다.
FROM
    tab -- 계정이 소유한 테이블의 정보를 기억하는 시스템이 관리하는 테이블
;
/*
    SQL Developer는 java로 만든 프로그램이라서 java 주석 표기 사용 가능. SQL에서는 읽지 못함.
    -- : 한 줄 주석 기호 (SQL 통용)
    
    scott 계정이 소유한 테이블
        emp         : 사원 정보를 기록한 테이블
        dept        : 부서 정보를 기록한 테이블
        salgrade    : 급여의 등급을 정의해서 기록한 테이블
        bonus       : 보너스 정보를 기록한 테이블

*/
-- 데이터 조회 질의 명령
-- 아래 질의명령은? 사원들의 모든 정보를 조회하는 질의명령이다.
SELECT
    * -- 조회할 column 이름 기술
FROM
    emp -- 테이블이름 기술 (여러개도 가능)
; -- 세미콜론 : 명령 하나가 끝났다는 표시. 누락되면 다음 행을 읽게 된다.

-- emp 테이블 구조
-- 참고) 테이블의 간략한 구조를 조회하는 질의명령 : DESC 테이블이름;
DESC emp;
/*
    결과) 컬럼이름, 널데이터 허용여부, 컬럼에 기록할 데이터의 타입을 보여준다.
    
        이름       널?       유형           
        -------- -------- ------------ 
        EMPNO    NOT NULL NUMBER(4)     - 사원번호
        ENAME             VARCHAR2(10)  - 사원이름
        JOB               VARCHAR2(9)   - 사원직급
        MGR               NUMBER(4)     - 상사번호 (상사의 사원번호)
        HIREDATE          DATE          - 입사일자
        SAL               NUMBER(7,2)   - 사원급여 (단위 : $)
        COMM              NUMBER(7,2)   - 커미션
        DEPTNO            NUMBER(2)     - 부서번호
    
    참고) 오라클에서 사용하는 데이터의 타입(유형)
        NUMBER      : 숫자 데이터를 기억하는 타입
        CHAR        : 문자 데이터를 고정길이형으로 기억하는 타입
        VARCHAR2    : 문자 데이터를 가변길이형으로 기억하는 타입 
        DATE        : 날짜 데이터를 기억하는 타입
        
        CLOB        : 문자 데이터 기억 타입
        BLOB        : 바이너리 데이터 기억 타입 
*/

-- 사원들의 사원번호, 사원이름, 직급 조회
SELECT
    empno, ename, job
FROM
    emp
;
 
-- 참고) 조회한 데이터는 연산이 가능하다.
--       숫자 데이터를 조회한 경우는 연산 결과를 꺼내올 수 있다.
-- ***** select 질의명령은 데이터를 조회만 하는 명령. 절대로 변경하는 기능이 없는 명령.

-- Q. 사원들의 사원이름, 급여를 조회하는데 급여에 50을 더해서 조회하시오.
SELECT
    ename 사원이름, sal 원급여, (sal + 50) 인상급여
FROM
    emp
;

/*
    조회하는 데이터의 컬럼이름을 별칭으로 바꿔서 조회할 수 있다.
    형식) SELECT 절의 세 가지 방식 모두 사용 가능하다
    단, 첫번째는 별칭이름에 공백이 들어가지 않은 경우만 사용 가능하다.
    두번째, 세번째는 별칭이름에 공백이 있는 경우에도 사용 가능하다.
        SELECT 
            컬럼이름 별칭이름, 컬럼이름2 AS "별칭이름", 컬럼이름3 "별칭이름"
        FROM
            테이블이름
        ;
        
    참고)
     데이터베이스에서는 문자열 데이터를 표현할 때, 작은 따옴표(' ')로만 표현한다.
     절대로 큰따옴표(" ")를 사용해서 데이터를 표현하지 않는다 .
*/